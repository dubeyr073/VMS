@model IMS.Models.ViewModel.PartyMaster
@{
    ViewBag.Title = "Ledger";
    Layout = "~/Views/Shared/DashBoard/_Layout.cshtml";
    string sBtnName = Model.ItemMappingList.Count > 0 ? "Edit GST Mapping" : "Add GST Mapping";
}

@{
    var AppToken = Convert.ToString(@Model.AppToken);
}
<div id="page-wrapper" class="gray-bg dashbard-1">
    <div class="content-main">
        <!--banner-->
        <div class="banner">
            <h2>
                <a href="/admin/dashboard">Home</a>
                <i class="fa fa-angle-right"></i>
                <span>Manage Ledger</span>
            </h2>
        </div>
        <!--//banner-->
        <!--content-->
        <div id="modelForm">
            <div class="blank">
                <div class="blank-page">
                    @Html.Partial("~/Views/Shared/_MessageBox.cshtml")
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group pull-right">
                        @using (Html.BeginForm("ManagePartyMaster", "Master", FormMethod.Post, new { enctype = "multipart/form-data", @id = "PartyMaster" }))
                        {
                            @Html.HiddenFor(m => m.AppToken)
                            @Html.HiddenFor(m => m.PartyId)
                            @Html.HiddenFor(m => m.IsMappingChanged, htmlAttributes: new { @id = "IsMappingChanged" })
                            @Html.HiddenFor(m => m.PartyMapping, htmlAttributes: new { @id = "PartyMapping" })
                            <div class="heading">
                                <h4>
                                    General Information
                                </h4>
                            </div>
                            <br />
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>FirstName<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.FirstName, htmlAttributes: new { @placeholder = "Enter First Name", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Middle Name</label>
                                    @Html.TextBoxFor(m => m.MiddleName, htmlAttributes: new { @placeholder = "Enter Middle Name", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Last Name</label>
                                    @Html.TextBoxFor(m => m.LastName, htmlAttributes: new { @placeholder = "Enter Last Name", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Mobile</label>
                                    @Html.TextBoxFor(m => m.Mobile, htmlAttributes: new { @placeholder = "Enter Mobile", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Email</label>
                                    @Html.TextBoxFor(m => m.Email, htmlAttributes: new { @placeholder = "Enter Email", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Gender</label>
                                    @{var genderItems = new List<SelectListItem>{
new SelectListItem { Text = "Select Gender", Value="" },
new SelectListItem { Text = "Male", Value="1" },
new SelectListItem { Text = "Female", Value="2" },
new SelectListItem { Text = "Other", Value="3" },
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      };
                                    }
                                    @Html.DropDownListFor(m => m.Gender, new SelectList(genderItems, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="heading">
                                <h4>
                                    Address
                                </h4>
                            </div>
                            <br />
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-6 form-group">
                                    <label>Address 1<span class="mandatory">*</span></label>
                                    @Html.TextAreaFor(m => m.Address1, htmlAttributes: new { @placeholder = "Address 1", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-6 form-group">
                                    <label>Address 2</label>
                                    @Html.TextAreaFor(m => m.Address2, htmlAttributes: new { @placeholder = "Address 2", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Country<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Country, htmlAttributes: new { @placeholder = "Enter Country", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>State<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(m => m.State, new SelectList(Model.StateLists, "Value", "Text"), htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>City<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.City, htmlAttributes: new { @placeholder = "Enter City", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Zip Code<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Zip, htmlAttributes: new { @placeholder = "Zip Code", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="heading">
                                <h4>
                                    Other Information
                                </h4>
                            </div>
                            <br />
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Title<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Title, htmlAttributes: new { @placeholder = "Enter Title", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Code<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Code, htmlAttributes: new { @placeholder = "Enter Code", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Office<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(m => m.OfficeId, new SelectList(Model.OfficeLists, "Value", "Text"), htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Group<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(m => m.GroupId, new SelectList(Model.GroupLists, "Value", "Text"), htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Maintain Ref<span class="mandatory">*</span></label>
                                    <br />
                                    @Html.CheckBoxFor(m => m.MaintainRef, new { @checked = "checked", @class = "checkboxcss", @id = "MaintainRef" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Credit Days<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.CreditDays, htmlAttributes: new { @placeholder = "Enter Credit Days", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Credit Limit</label>
                                    @Html.TextBoxFor(m => m.CreditLimit, htmlAttributes: new { @placeholder = "Enter Credit Limit", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Variable Limit<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.VariableLimit, htmlAttributes: new { @placeholder = "Enter Variable Limit", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Opening Balance</label>
                                    @Html.TextBoxFor(m => m.OpeningBalance, htmlAttributes: new { @placeholder = "Enter Opening Balance", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Sales Man<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(m => m.SalesManUserID, new SelectList(Model.SalesManList, "Value", "Text"), htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Party Category<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(m => m.CategoryId, new SelectList(Model.CategoryList, "Value", "Text"), htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-12 form-group">
                                    <label>Remarks</label>
                                    @Html.TextAreaFor(m => m.Remarks, htmlAttributes: new { @placeholder = "Remarks", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-12 form-group">
                                    <button type="button" id="btnPartyAndGstMapping" class="btncustome" name="btnPartyAndGstMapping">@sBtnName</button>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div id="divShowPartyAndGstMapping" style=" display:none">
                                <div class="styled-input">
                                    <div class="col-md-12 form-group">
                                        <h5></h5>
                                    </div>
                                </div>
                                <div class="col-md-12 table-responsive">
                                    <table id="tblGstMapping" class="table table-striped" cellpadding="0" cellspacing="0">
                                        <thead>
                                            <tr>
                                                <th class="tbl-heading text-center">Location</th>
                                                <th class="tbl-heading text-center">GST No</th>
                                                <th class="tbl-heading text-center">GST Type</th>
                                                <th class="tbl-heading text-center">GST Nature</th>
                                                <th class="tbl-heading text-center">Action</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var oMapping in Model.ItemMappingList.AsEnumerable())
                                            {
                                                <tr>
                                                    <td class="tbl-css" data-location-id="@Convert.ToInt32(oMapping.Location_Id)">
                                                        @oMapping.Location
                                                    </td>
                                                    <td class="tbl-css"  data-GSTNo="@Convert.ToString(oMapping.GSTNo)">
                                                        @oMapping.GSTNo
                                                    </td>
                                                    <td class="tbl-css"  data-GSTType-Id="@Convert.ToInt32(oMapping.GSTType_Id)">
                                                        @oMapping.GSTType
                                                    </td>
                                                    <td class="tbl-css"  data-GSTNature-Id="@Convert.ToInt32(oMapping.GSTNature_Id)">
                                                        @oMapping.GSTNature
                                                    </td>
                                                    <td><input type="button" value="Remove" onclick="Remove(this)" /></td>
                                                </tr>
                                            }
                                        </tbody>
                                        <tfoot>
                                            <tr>
                                                <td>
                                                    <label>Location<span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(m => m.LocationId, new SelectList(Model.LocationLists, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "LocationId" })
                                                </td>
                                                <td>
                                                    <label>GST No<span class="mandatory">*</span></label>
                                                    <input type="text" id="txtGst" name="txtGst" class="form-control" value="" />
                                                </td>
                                                <td>
                                                    <label>GST Type<span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(m => m.GSTType, new SelectList(Model.GSTTypeLists, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "GSTType_Id" })
                                                </td>
                                                <td>
                                                    <label>Nature<span class="mandatory">*</span></label>
                                                    @Html.DropDownListFor(m => m.GSTNature, new SelectList(Model.GSTNatureLists, "Value", "Text"), htmlAttributes: new { @class = "form-control", @id = "GSTNature_Id" })
                                                </td>
                                                <td><input type="button" style="margin-top: 24px;" id="btnAdd" value="Add" /></td>
                                            </tr>
                                        </tfoot>
                                    </table>
                                </div>
                                <div class="clearfix"></div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-md-8"></div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnSubmit" id="btnSubmit" class="btncustome pull-right">Submit</button>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="reset" name="btnReset" id="btnReset" class="btncustome pull-right">Reset</button>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="button" name="btnBack" id="btnBack" class="btncustome pull-right">Return</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="clearfix"> </div>
        </div>
    </div>
    <!--//content-->
    <!---->
</div>

<script type="text/javascript">
    $(document).ready(function () {
           if ('@ViewBag.Msg' != "") {
            $('#alertModal').modal('show');
            $('#msg').html("@ViewBag.Msg");
        }
        $("#btnBack").click(function () {
            window.location.href = "@Url.Action("partyindex", "master")?AppToken=@Model.AppToken";
        });
        $("#MaintainRef").change(function () {
            if (this.checked) {
                $('#MaintainRef').prop('checked', true);
            } else {
                $('#MaintainRef').prop('checked', false);
            }
        });

        $("body").on("click", "#btnAdd", function () {
            var bAdded = true;
            $("#IsMappingChanged").val(bAdded);
            if ($("#txtGst").val() != null && $("#txtGst").val() != "") {
                //Reference the Party and Location ddl.
                if ($("#tblGstMapping TBODY TR").length > 0) {
                    $("#tblGstMapping TBODY TR").each(function () {
                        var row = $(this);
                        let td = row.find("TD");
                        let locationId = parseInt(td.eq(0).attr('data-location-id'));
                        let GSTTypeId = parseInt(td.eq(2).attr('data-GSTType-Id'));
                        let GSTNatureId = parseInt(td.eq(3).attr('data-GSTNature-Id'));
                        if ((parseInt($("#LocationId").val()) === locationId && parseInt($("#GSTType_Id").val()) === GSTTypeId
                            && parseInt($("#GSTNature_Id").val()) === GSTNatureId)) {
                            bAdded = false;
                        }
                    });
                }

                if (bAdded) {
                    //Get the reference of the Table's TBODY element.
                    var tBody = $("#tblGstMapping > TBODY")[0];

                    //Add Row.
                    var row = tBody.insertRow(-1);

                    //Add Location cell.
                    var cell = $(row.insertCell(-1));
                    cell.html($("#LocationId :selected").text());
                    cell.attr('data-location-id', $("#LocationId").val())
                    //Add GSTNo cell.
                    cell = $(row.insertCell(-1));
                    cell.html($("#txtGst").val());
                    cell.attr('data-GSTNature', $("#txtGst").val())
                    //Add GSTType cell.
                    cell = $(row.insertCell(-1));
                    cell.html($("#GSTType_Id :selected").text());
                    cell.attr('data-GSTType-Id', $("#GSTType_Id").val())
                    //Add GSTNature cell.
                    cell = $(row.insertCell(-1));
                    cell.html($("#GSTNature_Id :selected").text());
                    cell.attr('data-GSTNature-Id', $("#GSTNature_Id").val())
                    //Add Button cell.
                    cell = $(row.insertCell(-1));
                    var btnRemove = $("<input />");
                    btnRemove.attr("type", "button");
                    btnRemove.attr("onclick", "Remove(this);");
                    btnRemove.val("Remove");
                    cell.append(btnRemove);
                } else {
                    alert("Party is already mapped with enter gst number !!!", "Enter Gst Number");
                }
            } else {
                $("#txtGst").focus();
                alert("Please enter gst number !!!", "Enter Gst Number");
            }

        });
        $("body").on("click", "#btnSubmit", function () {
            //Loop through the Table rows and build a JSON array.
            var ItemMasterValues = [];
            $("#tblGstMapping TBODY TR").each(function () {
                var row = $(this);
                var oMapping = {};
                oMapping.Location_Id = parseInt(row.find("TD").eq(0).attr('data-location-id'));
                oMapping.GSTType_Id = parseInt(row.find("TD").eq(2).attr('data-GSTType-Id'));
                oMapping.GSTNature_Id = parseInt(row.find("TD").eq(3).attr('data-GSTNature-Id'));
                oMapping.GSTNo = row.find("TD").eq(1).attr('data-GSTNature');
                ItemMasterValues.push(oMapping);
            });
            $("#PartyMapping").val(JSON.stringify(ItemMasterValues));
        });
        $("#btnPartyAndGstMapping").click(function () {
            $("#divShowPartyAndGstMapping").toggle();
        });
    });

    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var bAdded = true;
        $("#IsMappingChanged").val(bAdded);
        var row = $(button).closest("TR");
        var name = $("TD", row).eq(0).text();
        if (confirm("Do you want to remove this mapping.", "Remove location and party")) {
            //Get the reference of the Table.
            var table = $("#tblGstMapping")[0];
            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
    };
</script>