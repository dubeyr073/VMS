@model IMS.Models.ViewModel.RoleMaster
@{
    ViewBag.Title = "Role Master";
    Layout = "~/Views/Shared/DashBoard/_Layout.cshtml";
}

@{
    var AppToken = Convert.ToString(@Model.AppToken);
}

<div id="page-wrapper" class="gray-bg dashbard-1">
    <div class="content-main">
        <!--banner-->
        <div class="banner">
            <h2>
                <a href="/admin/dashboard">Home</a>
                <i class="fa fa-angle-right"></i>
                <span>Role Master</span>
            </h2>
        </div>
        <!--//banner-->
        <!--content-->
        <div id="modelForm">
            <div class="blank">
                <div class="blank-page">
                    <div class="col-lg-12">
                        @if (ViewBag.Msg == "add")
                        {
                            <script type="text/javascript">
                                alert("Added sucessfully!");
                                window.location = "Master/RoleIndex?AppToken="+'@Model.AppToken';
                            </script>
                        }
                        else if (ViewBag.Msg == "update")
                        {
                            <script type="text/javascript">
                                alert("Data updated sucessfully!");
                                window.location = "Master/RoleIndex?AppToken="+'@Model.AppToken';
                            </script>
                        }
                        else
                        {
                            <script type="text/javascript">
                                window.location = "Master/RoleIndex?AppToken=" + '@Model.AppToken';
                            </script>
                        }
                        <p id="msg" style="color:#ef0f44;text-align:center">@ViewBag.Msg</p>
                    </div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group pull-right">
                        @using (Html.BeginForm("ManageRoleMaster", "Master", FormMethod.Post, new { enctype = "multipart/form-data", @id = "RoleMaster" }))
                        {
                            @Html.HiddenFor(m => m.AppToken)
                            @Html.HiddenFor(m => m.RoleId)
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Title<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Title, htmlAttributes: new { @placeholder = "Enter Title", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Code<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Code, htmlAttributes: new { @placeholder = "Enter Code", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-12 form-group">
                                    <label>Remarks</label>
                                    @Html.TextAreaFor(m => m.Remarks, htmlAttributes: new { @placeholder = "Remarks", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-md-10">
                            </div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnSubmit" id="btnSubmit" class="btn btn-primary pull-right">Submit</button>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="reset" name="btnReset" id="btnReset" class="btn btn-primary pull-right">Reset</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="blank-page">
                    <div id="listGrid"></div>
                </div>
            </div>
            <div class="clearfix"> </div>
        </div>
    </div>
    <!--//content-->
    <!---->
</div>

<script type="text/javascript">
    $(document).ready(function () {
        IMSC.ajaxCall("GET", "/Master/GetRoleMaster?AppToken="+'@Model.AppToken', {}, "text", function (d) {
            var result = JSON.parse(d);
            if (result !== "null" && result !== "") {
                var fields = [
                    { name: "Role_Id", css: "hidden", },
                    { name: "Title", type:"text", title: "Title", sorting: true, filtering: true, width: 40 },
                    { name: "Code", type: "text", title: "Code", sorting: true, filtering: true, width: 40 },
                    { name: "Remarks", type: "text", title: "Remarks", sorting: true, filtering: true, width: 80  },
                    {
                        title: "Action",
                        width: 20,
                        itemTemplate: function (value, args) {
                            return IMSC.genrateDynamicButtons(value, args,@Model.AuthMode);
                        }
                    }
                ];
                var options = {
                    filtering: true,
                    editing: true,
                    sorting: true,
                    paging: true,
                    autoload: true,
                    controller: {
                        RoleLists: result,
                        loadData: function (filter) {
                            return $.grep(this.RoleLists, function (RoleList) {
                                return ((!filter.Title || RoleList.Title.toLowerCase().indexOf(filter.Title.toLowerCase()) > -1)
                                    && (!filter.Code || RoleList.Code.toLowerCase().indexOf(filter.Code.toLowerCase()) > -1)
                                    && (!filter.Remarks || RoleList.Remarks.toLowerCase().indexOf(filter.Remarks.toLowerCase()) > -1));
                            });
                        }
                    },
                    fields: fields
                };
                $.extend(options, IMSC.grid_options);
                $("#listGrid").jsGrid(options);
                IMSC.filteOnKeyPress("#listGrid");
            }

        });
    });

    var editFormData = function (dilogType, RoleMaster) {
        if (RoleMaster.Role_Id > 0) {
            $("#RoleId").val(RoleMaster.Role_Id);
            $("#Title").val(RoleMaster.Title);
            $("#Code").val(RoleMaster.Code);
            $("#Remarks").val(RoleMaster.Remarks);
            $("#btnSubmit").text("Update")
        }
        else {
            $("#RoleId").val("0");
            $("#btnSubmit").text("Submit")
        }
    };

    var deleteFormData = function (dialogType, RoleMaster) {
        var result = confirm("Want to delete?");
        if (result == true) {
            IMSC.ajaxCall("POST", "/Master/DeleteRoleMaster?roleId=" + RoleMaster.Role_Id +"&AppToken=" + '@Model.AppToken', {}, "text", function (d) {
            var result = JSON.parse(d);
            if (result !== "null" && result !== "") {
                window.location.reload();
            }
        });
        } else {
            return false;
        }
    };
</script>
