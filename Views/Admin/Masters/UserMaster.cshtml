@model IMS.Models.ViewModel.UserMaster
@{
    ViewBag.Title = "User Master";
    Layout = "~/Views/Shared/DashBoard/_Layout.cshtml";
}

@{
    var AppToken = Convert.ToString(@Model.AppToken);
}

<div id="page-wrapper" class="gray-bg dashbard-1">
    <div class="content-main">
        <!--banner-->
        <div class="banner">
            <h2>
                <a href="/admin/dashboard">Home</a>
                <i class="fa fa-angle-right"></i>
                <span>User Master</span>
            </h2>
        </div>
        <!--//banner-->
        <!--content-->
        <div id="modelForm">
            <div class="blank">
                <div class="blank-page">
                    <div class="col-lg-12"><p id="msg" style="color:#ef0f44;text-align:center">@ViewBag.Msg</p></div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group pull-right">
                        @using (Html.BeginForm("ManageUserMaster", "Master", FormMethod.Post, new { @id = "UserMaster" }))
                        {
                            @Html.HiddenFor(m => m.AppToken)
                            @Html.HiddenFor(m => m.AuthMode)
                            @Html.HiddenFor(m => m.User_Id)
                            @Html.HiddenFor(m => m.sRoles, htmlAttributes: new { @id = "hdnRoles" })
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>User Name<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.UserName, htmlAttributes: new { @placeholder = "User Name", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Password<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Password, htmlAttributes: new { @placeholder = "Password", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Confirm Password<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.ConfirmPassword, htmlAttributes: new { @placeholder = "Confirm Password", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>First Name<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.FirstName, htmlAttributes: new { @placeholder = "First Name", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Password<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.MiddleName, htmlAttributes: new { @placeholder = "Middle Name", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Password<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.LastName, htmlAttributes: new { @placeholder = "Last Name", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Password<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Mobile, htmlAttributes: new { @placeholder = "Mobile", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Password<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Email, htmlAttributes: new { @placeholder = "Email", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Gender<span class="mandatory">*</span></label>
                                    @{var genderItems = new List<SelectListItem>{
                                          new SelectListItem { Text = "Select Gender", Value="" },
                                          new SelectListItem { Text = "Male", Value="1" },
                                          new SelectListItem { Text = "Female", Value="2" },
                                           new SelectListItem { Text = "Other", Value="3" },
                                     };
                                    }
                                    @Html.DropDownListFor(m => m.Gender, new SelectList(genderItems, "Value", "Text"), htmlAttributes: new { @class = "form-control", @required = "required" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>DOB<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.DOB, htmlAttributes: new { @placeholder = "DD/MM/YYY", @required = "required", @class = "form-control clsDate" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>DOJ<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.DOJ, htmlAttributes: new { @placeholder = "DD/MM/YYY", @required = "required", @class = "form-control clsDate" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>State</label>
                                    @Html.DropDownListFor(m => m.State, new SelectList(Model.StateLists, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Primary Role</label>
                                    @Html.DropDownListFor(m => m.PrimaryRole, new SelectList(Model.RoleLists, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Location</label>
                                    @Html.DropDownListFor(m => m.City, new SelectList(Model.LocationLists, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Relegion<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Relegion, htmlAttributes: new { @placeholder = "Relegion", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Remarks</label>
                                    @Html.TextBoxFor(m => m.Remarks, htmlAttributes: new { @placeholder = "Remarks", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-3 form-group">
                                    <label>Pin code</label>
                                    @Html.TextBoxFor(m => m.Pincode, htmlAttributes: new { @placeholder = "Pincode", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-6 form-group">
                                    <label>Address 1<span class="mandatory">*</span></label>
                                    @Html.TextAreaFor(m => m.Address1, htmlAttributes: new { @placeholder = "Address 1", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-6 form-group">
                                    <label>Address 2<span class="mandatory">*</span></label>
                                    @Html.TextAreaFor(m => m.Address2, htmlAttributes: new { @placeholder = "Address2", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <h3>Rols</h3>
                                @*<div class="col-md-4 form-group">
                                        <table class="table table-bordered table-condensed table-hover table-striped text-center">
                                            <thead>
                                                <tr>
                                                    <th scope="col">Rols Name</th>
                                                    <th scope="col">Permission</th>
                                                </tr>
                                            </thead>
                                            <tbody class="text-left">
                                                @foreach (var item in Model.RoleLists)
                                                {
                                                    <tr>
                                                        <td>
                                                            <div class="form-check">
                                                                <label class="form-check-label" for="@item.Value">@item.Text</label>
                                                            </div>
                                                        </td>
                                                        <td>
                                                            <div class="form-check">
                                                                <input class="form-check-input" type="checkbox" id="@item.Value">
                                                            </div>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                        <br />
                                        <button type="button" value="selectAll" class="main" onclick="checkAll()">Select All</button>
                                        <button type="button" value="deselectAll" class="main" onclick="uncheckAll()">Clear</button>
                                    </div>*@
                                <div class="clearfix"></div>
                                <hr />
                                @foreach (var item in Model.RoleLists)
                                {
                                    <div class="col-md-2 form-group">
                                        <label for="@item.Value">@item.Text</label>
                                    </div>
                                    <div class="col-md-1 form-group">
                                        <input class="chk" type="checkbox" id="@item.Value">
                                    </div>
                                }
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-md-10"></div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnSubmit" id="btnSubmit" class="btn btn-primary pull-right">Submit</button>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="reset" name="btnReset" id="btnReset" class="btn btn-primary pull-right">Reset</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
            <div class="clearfix"> </div>
        </div>
    </div>
    <!--//content-->
    <!---->
</div>

<script type="text/javascript">
    $(document).ready(function () {
        $('#btnSubmit').click(function () {
            debugger;
            var selected = new Array();
            $("input:checkbox[class=chk]:checked").each(function () {
                selected.push($(this).attr("id"));
            });
            $("#hdnRoles").val(selected);
        });

        //// Select all check boxes : Setting the checked property to true in checkAll() function
        //function checkAll() {
        //    var items = document.getElementsByName('brand');
        //    for (var i = 0; i < items.length; i++) {
        //        if (items[i].type == 'checkbox')
        //            items[i].checked = true;
        //    }
        //}
        //// Clear all check boxes : Setting the checked property to false in uncheckAll() function
        //function uncheckAll() {
        //    var items = document.getElementsByName('brand');
        //    for (var i = 0; i < items.length; i++) {
        //        if (items[i].type == 'checkbox')
        //            items[i].checked = false;
        //    }
        //}
        @*IMSC.ajaxCall("GET", "/Master/GetPartyMaster?AppToken="+'@Model.AppToken', {}, "text", function (d) {
            var result = JSON.parse(d);
            if (result !== "null" && result !== "") {
                var fields = [
                    { name: "Party_Id", css: "hidden", },
                    { name: "Title", type:"text", title: "Title", sorting: true, filtering: true, width: 40 },
                    { name: "Code", type: "text", title: "Code", sorting: true, filtering: true, width: 40 },
                    { name: "CreditDays", title: "CreditDays", sorting: true, filtering: false, width: 80  },
                    {
                        title: "Action",
                        width: 20,
                        itemTemplate: function (value, args) {
                            return IMSC.genrateDynamicButtons(value, args,@Model.AuthMode);
                        }
                    }
                ];
                var options = {
                    filtering: true,
                    editing: true,
                    sorting: true,
                    paging: true,
                    autoload: true,
                    controller: {
                        PartyLists: result,
                        loadData: function (filter) {
                            return $.grep(this.PartyLists, function (PartyList) {
                                return ((!filter.Title || PartyList.Title.toLowerCase().indexOf(filter.Title.toLowerCase()) > -1)
                                    && (!filter.Code || PartyList.Code.toLowerCase().indexOf(filter.Code.toLowerCase()) > -1));
                            });
                        }
                    },
                    fields: fields
                };
                $.extend(options, IMSC.grid_options);
                $("#listGrid").jsGrid(options);
                IMSC.filteOnKeyPress("#listGrid");
            }
        });*@
    });

    @*var editFormData = function (dilogType, PartyMaster) {
        if (PartyMaster.Party_Id > 0) {
            $("#PartyId").val(PartyMaster.Party_Id);
            $("#Title").val(PartyMaster.Title);
            $("#Code").val(PartyMaster.Code);
            $("#OfficeId").val(PartyMaster.Office_Id);
            $("#GroupId").val(PartyMaster.Group_Id);
            if (PartyMaster.Maintain_Ref) {
                $('#MaintainRef').prop('checked', true);
            } else {
                $('#MaintainRef').prop('checked', false);
            }
            $("#CreditDays").val(PartyMaster.CreditDays);
            $("#CreditLimit").val(PartyMaster.CreditLimit);
            $("#VariableLimit").val(PartyMaster.VariableLimit);
            $("#FirstName").val(PartyMaster.FirstName);
            $("#MiddleName").val(PartyMaster.MiddleName);
            $("#LastName").val(PartyMaster.LastName);
            $("#Mobile").val(PartyMaster.Mobile);
            $("#Email").val(PartyMaster.Email);
            $("#Gender").val(PartyMaster.Gender);
            $("#Address1").val(PartyMaster.Address1);
            $("#Address2").val(PartyMaster.Address2);
            $("#City").val(PartyMaster.City);
            $("#State").val(PartyMaster.State);
            $("#Country").val(PartyMaster.Country);
            $("#Zip").val(PartyMaster.Zip);
            $("#Remarks").val(PartyMaster.Remarks);
            $("#btnSubmit").text("Update")
        }
        else {
            $("#PartyId").val("0");
            $("#btnSubmit").text("Submit")
        }
    };

    var deleteFormData = function (dialogType, PartyMaster) {
        var result = confirm("Want to delete?");
        if (result == true) {
            IMSC.ajaxCall("POST", "/Master/DeletePartyMaster?PartyId=" + PartyMaster.Party_Id +"&AppToken=" + '@Model.AppToken', {}, "text", function (d) {
            var result = JSON.parse(d);
            if (result !== "null" && result !== "") {
                window.location.reload();
            }
        });
        } else {
            return false;
        }
    };
    $("#MaintainRef").change(function () {
        if (this.checked) {
            $('#MaintainRef').prop('checked', true);
        } else {
            $('#MaintainRef').prop('checked', false);
        }
    });*@
</script>