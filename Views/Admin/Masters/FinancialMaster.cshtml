@model IMS.Models.ViewModel.FinancialMaster
@{
    ViewBag.Title = "Financial Master";
    Layout = "~/Views/Shared/DashBoard/_Layout.cshtml";
}

@{
    var AppToken = Convert.ToString(@Model.AppToken);
}

<div id="page-wrapper" class="gray-bg dashbard-1">
    <div class="content-main">
        <!--banner-->
        <div class="banner">
            <h2>
                <a href="/admin/dashboard">Home</a>
                <i class="fa fa-angle-right"></i>
                <span>Financial Master</span>
            </h2>
        </div>
        <!--//banner-->
        <!--content-->
        <div id="modelForm">
            <div class="blank">
                <div class="blank-page">
                    <div class="col-lg-12"><p id="msg" style="color:#ef0f44;text-align:center">@ViewBag.Msg</p></div>
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group pull-right">
                        @using (Html.BeginForm("ManageFinancialMaster", "Master", FormMethod.Post, new { enctype = "multipart/form-data", @id = "FinancialMaster" }))
                        {
                            @Html.HiddenFor(m => m.AppToken)
                            @Html.HiddenFor(m => m.FinancialId)
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>From Date<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.FromDate, htmlAttributes: new { @placeholder = "DD/MM/YYY", @required = "required", @class = "form-control clsDate" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>To Date<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.ToDate, htmlAttributes: new { @placeholder = "DD/MM/YYY", @required = "required", @class = "form-control clsDate" })
                                </div>
                            </div>
                            <div class="col-md-4" style="padding-top:26px">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnSubmit" id="btnSubmit" class="btn btn-primary hidden">Submit</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="blank-page">
                    <div id="listGrid"></div>
                </div>
            </div>
            <div class="clearfix"> </div>
        </div>
    </div>
    <!--//content-->
    <!---->
</div>

<script type="text/javascript">

    $(document).ready(function () {
        IMSC.ajaxCall("GET", "/Master/GetFinancialMaster?AppToken="+'@Model.AppToken', {}, "text", function (d) {
            var result = JSON.parse(d);
            if (result !== "null" && result !== "") {
                var fields = [
                    { name: "Financial_Id", css: "hidden", },
                    { name: "From_date", title: "From Date", sorting: true, filtering: true, width: 50 },
                    { name: "To_date", title: "To Date", sorting: true, filtering: true, width: 50 },
                    {
                        width: 20,
                        itemTemplate: function (value, args) {
                            return IMSC.genrateDynamicButtons(value, args,@Model.AuthMode);
                        }
                    }
                ];
                var options = {
                    filtering: true,
                    editing: true,
                    sorting: true,
                    paging: true,
                    autoload: true,
                    controller: {
                        StateLists: result,
                        loadData: function (filter) {
                            return $.grep(this.StateLists, function (StateList) {
                                return (!filter.Title || StateList.Title.toLowerCase().indexOf(filter.Title.toLowerCase()) > -1);
                            });
                        }
                    },
                    fields: fields
                };
                $.extend(options, IMSC.grid_options);
                $("#listGrid").jsGrid(options);
                IMSC.filteOnKeyPress("#listGrid");
            }
        });

        $('#FromDate').datepicker({
            autoclose: true,
            format: "dd-mm-yyyy",
            immediateUpdates: true,
            todayBtn: true,
            todayHighlight: true
        }).datepicker("setDate", "0");

        $('#ToDate').datepicker({
            autoclose: true,
            format: "dd-mm-yyyy",
            immediateUpdates: true,
            todayBtn: true,
            todayHighlight: true
        }).datepicker("setDate", "0");
    });
    var editFormData = function (dilogType, FinancialMaster) {
        if (FinancialMaster.Financial_Id > 0) {
            $("#FinancialId").val(FinancialMaster.Financial_Id);
            $("#FromDate").val(FinancialMaster.From_date);
            $("#ToDate").val(FinancialMaster.To_date);
            $("#IsActive").val(FinancialMaster.IsActive == true ? "1" : "2");
            $("#btnSubmit").text("Update")
        }
        else {
            $("#FinancialId").val("0");
            $("#btnSubmit").text("Submit")
        }
    };

    var deleteFormData = function (dialogType, FinancialMaster) {
        var result = confirm("Want to delete?");
        if (result == true) {
             IMSC.ajaxCall("POST", "/Master/DeleteFinancialMaster?financialId="+FinancialMaster.Financial_Id +"&AppToken=" + '@Model.AppToken', {}, "text", function (d) {
            var result = JSON.parse(d);
            if (result !== "null" && result !== "") {
                window.location.reload();
            }
        });
        } else {
            return false;
        }
    };
    function myFunction(p1, p2) {
        return p1 * p2;   // The function returns the product of p1 and p2
    }
</script>