@model IMS.Models.ViewModel.CompanyMaster
@{
    ViewBag.Title = "Company Master";
    Layout = "~/Views/Shared/DashBoard/_Layout.cshtml";
}

@{
    var AppToken = Convert.ToString(@Model.AppToken);
}

<div id="page-wrapper" class="gray-bg dashbard-1">
    <div class="content-main">
        <!--banner-->
        <div class="banner">
            <h2>
                <a href="/admin/dashboard">Home</a>
                <i class="fa fa-angle-right"></i>
                <span>Company Master</span>
            </h2>
        </div>
        <!--//banner-->
        <!--content-->
        <div id="modelForm">
            <div class="blank">
                <div class="blank-page">
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group pull-right">
                        @using (Html.BeginForm("ManageCompanyMaster", "Master", FormMethod.Post, new {  @id = "CompanyMaster" }))
                        {
                            @Html.HiddenFor(m => m.AppToken)
                            @Html.HiddenFor(m => m.CompanyId)
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Title<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Title, htmlAttributes: new { @placeholder = "Enter Title", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Code<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Code, htmlAttributes: new { @placeholder = "Enter Code", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Type</label>
                                    @{var lstType = new List<SelectListItem>{
                                          new SelectListItem { Text = "1", Value="1" },
                                          new SelectListItem { Text = "2", Value="2" },
                                           new SelectListItem { Text = "3", Value="3" },
                                          new SelectListItem { Text = "4", Value="4" },
                                           new SelectListItem { Text = "5", Value="5" },
                                          new SelectListItem { Text = "6", Value="6" }
                                     };
                                    }
                                    @Html.DropDownListFor(m => m.TypeId, new SelectList(lstType, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Fin-Year</label>
                                    @{var lstFinYear = new List<SelectListItem>{
                                          new SelectListItem { Text = "1", Value="1" },
                                          new SelectListItem { Text = "2", Value="2" },
                                           new SelectListItem { Text = "3", Value="3" },
                                          new SelectListItem { Text = "4", Value="4" },
                                           new SelectListItem { Text = "5", Value="5" },
                                          new SelectListItem { Text = "6", Value="6" }
                                     };
                                    }
                                    @Html.DropDownListFor(m => m.FinancialId, new SelectList(lstFinYear, "Value", "Text"), htmlAttributes: new { @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-8 form-group">
                                    <label>Ownership<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Ownership, htmlAttributes: new { @placeholder = "Enter Ownership", @required = "required", @class = "form-control" })
                                </div>
                            </div>


                            <div class="styled-input">
                                <div class="col-md-6 form-group">
                                    <label>Address1<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Address1, htmlAttributes: new { @placeholder = "Enter Address1", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-6 form-group">
                                    <label>Address2<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.Address2, htmlAttributes: new { @placeholder = "Enter Address2", @required = "required", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-12 form-group">
                                    <label>Remarks</label>
                                    @Html.TextAreaFor(m => m.Remarks, htmlAttributes: new { @placeholder = "Remarks", @class = "form-control" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-md-12">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnSubmit" id="btnSubmit" class="btn btn-primary pull-right">Submit</button>
                                </div>
                            </div>
                        }
                    </div>
                </div>
                <div class="blank-page">
                    <div id="listGrid"></div>
                </div>
            </div>
            <div class="clearfix"> </div>
        </div>
    </div>
    <!--//content-->
    <!---->
</div>

<script type="text/javascript">
    $(document).ready(function () {
        var msg = "@ViewBag.Msg";
        if (msg !== "null") {
            if (msg ==="add") {
                alert("Company added sucessfully!");
                window.location = "CompanyIndex?AppToken="+'@Model.AppToken';
            } else if (msg === "update") {
                alert("Company updated sucessfully!");
                window.location = "CompanyIndex?AppToken="+'@Model.AppToken';
            } else if (msg === "error") {
                alert("some error occurred, please try again..!");
            }
        }
        IMSC.ajaxCall("GET", "/Master/GetCompanyMaster?AppToken="+'@Model.AppToken', {}, "text", function (d) {
            var result = JSON.parse(d);
            if (result !== "null" && result !== "") {
                var fields = [
                    { name: "Company_Id", css: "hidden", },
                    { name: "Title", title: "Title", sorting: true, filtering: true, width: 40 },
                    { name: "Code", title: "Code", sorting: true, filtering: true, width: 40 },
                    { name: "Ownership", title: "Ownership", sorting: true, filtering: true, width: 30 },
                    { name: "Type_Id", css: "hidden", },
                    { name: "Financial_Id", css: "hidden", },
                    { name: "Financial_Year", title: "Fin-Year", sorting: true, filtering: true, width: 20 },
                    { name: "Address1", title: "Address1", sorting: true, filtering: true, width: 50 },
                    { name: "Address2", title: "Address2", sorting: true, filtering: true, width: 50 },
                    { name: "Remarks", title: "Remarks", sorting: true, filtering: true, width: 40  },
                    {
                        title: "Action",
                        width: 30,
                        itemTemplate: function (value, args) {
                            return IMSC.genrateDynamicButtons(value, args,@Model.AuthMode);
                        }
                    }
                ];
                var options = {
                    filtering: true,
                    editing: true,
                    sorting: true,
                    paging: true,
                    autoload: true,
                    controller: {
                        CompanyLists: result,
                        loadData: function (filter) {
                            return $.grep(this.CompanyLists, function (CompanyList) {
                                return (!filter.Title || CompanyList.Title.toLowerCase().indexOf(filter.Title.toLowerCase()) > -1);
                            });
                        }
                    },
                    fields: fields
                };
                $.extend(options, IMSC.grid_options);
                $("#listGrid").jsGrid(options);
                IMSC.filteOnKeyPress("#listGrid");
            }

        });
    });

    var editFormData = function (dilogType, CompanyMaster) {
        if (CompanyMaster.Company_Id > 0) {
            $("#CompanyId").val(CompanyMaster.Company_Id);
            $("#Title").val(CompanyMaster.Title);
            $("#Code").val(CompanyMaster.Code);
            $("#Ownership").val(CompanyMaster.Ownership);
            $("#Address1").val(CompanyMaster.Address1);
            $("#Address2").val(CompanyMaster.Address2);
            $("#Remarks").val(CompanyMaster.Remarks);
            $("#TypeId").val(CompanyMaster.Type_Id);
            $("#FinancialId").val(CompanyMaster.Financial_Id);
            $("#btnSubmit").text("Update")
        }
        else {
            $("#CompanyId").val("0");
            $("#btnSubmit").text("Submit")
        }
    };

    var deleteFormData = function (dialogType, CompanyMaster) {
        var result = confirm("Want to delete?");
        if (result == true) {
            IMSC.ajaxCall("POST", "/Master/DeleteCompanyMaster?companyId="+CompanyMaster.Company_Id +"&AppToken=" + '@Model.AppToken', {}, "text", function (d) {
            var result = JSON.parse(d);
            if (result !== "null" && result !== "") {
                window.location.reload();
            }
        });
        } else {
            return false;
        }
    };
</script>