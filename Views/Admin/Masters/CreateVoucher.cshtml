@model IMS.Models.ViewModel.VoucherMaster
@{
    /**/

    ViewBag.Title = "Voucher Master";
    Layout = "~/Views/Shared/DashBoard/_Layout.cshtml";
}

@{
    var AppToken = Convert.ToString(@Model.AppToken);
}
<div id="page-wrapper" class="gray-bg dashbard-1">
    <div class="content-main">
        <!--banner-->
        <div class="banner">
            <h2>
                <a href="/admin/dashboard">Home</a>
                <i class="fa fa-gift"></i>
                <span>Voucher</span>
            </h2>
        </div>
        <!--//banner-->
        <!--content-->
        <div id="modelForm">
            <div class="blank">
                <div class="blank-page">
                    @Html.Partial("~/Views/Shared/_MessageBox.cshtml")
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group pull-right">
                        @using (Html.BeginForm("SaveVoucher", "Master", FormMethod.Post, new { @id = "Voucher" }))
                        {
                            @Html.HiddenFor(m => m.VoucherId, htmlAttributes: new { @id = "VoucherId" })
                            @Html.HiddenFor(m => m.AppToken)
                            @Html.HiddenFor(m => m.VoucherLine, htmlAttributes: new { @id = "VoucherLine" })
                            @Html.HiddenFor(m => m.Amount_DR, htmlAttributes: new { @id = "Amount_DR" })
                            @Html.HiddenFor(m => m.Amount_CR, htmlAttributes: new { @id = "Amount_CR" })
                            @Html.HiddenFor(m => m.Total_Amount, htmlAttributes: new { @id = "Total_Amount" })
                            <div class="heading">
                                <h4>
                                    Voucher Detail
                                </h4>
                            </div>
                            <br />
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Office<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(m => m.OfficeId, new SelectList(Model.OfficeLists, "Value", "Text"), htmlAttributes: new { @id = "OfficeId", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Voucher Type<span class="mandatory">*</span></label>
                                    @Html.DropDownListFor(m => m.Constant_Id, new SelectList(Model.Vouchers, "Value", "Text"), htmlAttributes: new { @id = "Constant_Id", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Voucher Number<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.VoucherNumber, htmlAttributes: new { @placeholder = "Voucher Number", @id = "VoucherNumber", @class = "form-control" })

                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label> Voucher Date<span class="mandatory">*</span></label>
                                    @Html.TextBoxFor(m => m.VoucherDate, htmlAttributes: new { @id = "VoucherDate", @placeholder = "dd/mm/yyyy", @class = "form-control clsDate" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Cheque Number</label>
                                    @Html.TextBoxFor(m => m.CheckNumber, htmlAttributes: new { @id = "CheckNumber", @placeholder = "Cheque Number", @class = "form-control" })
                                </div>
                            </div>
                            <div class="styled-input">
                                <div class="col-md-4 form-group">
                                    <label>Cheque Date</label>
                                    @Html.TextBoxFor(m => m.CheckDate, htmlAttributes: new { @id = "CheckDate", @placeholder = "dd/mm/yyyy", @class = "form-control clsDate" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="heading">
                                    <h4>
                                        Add/Update Voucher Detail
                                    </h4>
                                </div>
                                <br />
                            </div>
                            <div class="styled-input">
                                <div class="col-md-2 form-group">
                                    <label>Entry Type<span class="mandatory">*</span></label>
                                    <select id="ddlEnteryType" name="ddlEnteryType" class="form-control">
                                        <option value="CR">CR</option>
                                        <option value="DR">DR</option>
                                    </select>
                                </div>
                                <div class="col-md-4 form-group">
                                    <label>Party</label>
                                    @Html.DropDownListFor(m => m.PartyId, new SelectList(Model.PartyLists, "Value", "Text"), htmlAttributes: new { @id = "PartyId", @class = "form-control" })
                                </div>
                                <div class="col-md-2 form-group">
                                    <label>Amount<span class="mandatory">*</span></label>
                                    @Html.TextBox("Amount", "", htmlAttributes: new { @placeholder = "Amount", @id = "Amount", @class = "form-control" })
                                </div>
                                <div class="col-md-2 form-group">
                                    <label>Action</label>
                                    <br />
                                    <a id="btnAdd" name="btnAdd" class="btn btn-primary"><i class="fa fa-plus"></i></a>
                                    <a id="btnReset" name="btnReset" class="btn btn-primary"><i class="fa fa-refresh"></i></a>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <label id="lblTotalAmount">Total : 0.00</label>
                            </div>
                            <div class="clearfix"></div>
                            <div class="table-responsive">
                                <table id="tblVoucher" class="table table-striped" cellpadding="0" cellspacing="0">
                                    <thead>
                                        <tr>
                                            <th class="tbl-heading">Action</th>
                                            <th class="tbl-heading">Entry Type</th>
                                            <th class="tbl-heading">Party</th>
                                            <th class="tbl-heading">Office</th>
                                            <th class="tbl-heading">Amount</th>
                                        </tr>
                                    </thead>
                                    <tbody></tbody>
                                </table>
                                <div id="divAmountDiffrence" class="row" style="display:none">
                                    <div class="col-md-4">
                                        <span>Debit Total:  <label id="lblDebitTotal"></label></span>
                                    </div>
                                    <div class="col-md-4">
                                        <span>Credit Total:  <label id="lblCreditTotal"></label></span>
                                    </div>
                                    <div class="col-md-4">
                                        <span>Difference Total:  <label id="lblDiffrenceTotal"></label></span>
                                    </div>
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="styled-input">
                                <div class="col-md-12 form-group">
                                    <label>Remarks</label>
                                    @Html.TextAreaFor(m => m.Remarks, htmlAttributes: new { @id = "Remarks", @class = "form-control clsDate" })
                                </div>
                            </div>
                            <div class="clearfix"></div>
                            <div class="col-md-8"></div>
                            <div class="col-md-1 form-group pull-right">
                                <div class="appointment-btn text-lg-right">
                                    @if (Model.VoucherId == 0)
                                    {
                                        <button type="button" name="btnResetForm" id="btnResetForm" class="btncustome">Reset</button>
                                    }
                                </div>
                            </div>
                            <div class="col-md-1 form-group pull-right">
                                <div class="appointment-btn text-lg-right">
                                    <button type="button" name="btnBack" id="btnBack" class="btncustome">Return</button>
                                </div>
                            </div>
                            <div class="col-md-1 form-group pull-right">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnSubmit" id="btnSubmit" class="btncustome">Submit</button>
                                </div>
                            </div>
                            <div class="col-md-1 form-group pull-right">
                                <div style="display:none" id="divDeleteVoucher">
                                    @if (Model.VoucherId > 0)
                                    {
                                        <button type="button" name="btnDelete" id="btnDelete" class="btncustome pull-right">Delete</button>
                                    }
                                </div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>
        <div class="clearfix"> </div>
    </div>
    <!--//content-->
    <!---->
</div>

<script type="text/javascript">
    $(document).ready(function () {
        if ('@ViewBag.Msg' != "") {
            $('#alertModal').modal('show');
            $('#msg').html("@ViewBag.Msg");
        }
        $("#PartyId").select2();
        $("#VoucherDate").val("");
        $("#VoucherDate").attr('placeholder', 'dd/mm/yyyy');
        $("#CheckDate").val("");
        $("#CheckDate").attr('placeholder', 'dd/mm/yyyy');
        if (@Model.VoucherId > 0) {
            IMSC.ajaxCall("GET", `/Master/GeVoucher?voucherId=${@Model.VoucherId}&AppToken=${'@Model.AppToken'}`, {}, "text", function (d) {
                var VoucherLists = JSON.parse(d);
                
                $("#VoucherId").val(VoucherLists[0].Voucher_Id);
                $("#Amount_DR").val(VoucherLists[0].Amount_DR);
                $("#Amount_CR").val(VoucherLists[0].Amount_CR);
                $("#Total_Amount").val(VoucherLists[0].Total_Amount);
                $("#OfficeId").val(VoucherLists[0].Office_Id);
                $("#Constant_Id").val(VoucherLists[0].VoucherTypeId);
                $("#VoucherNumber").val(VoucherLists[0].Voucher_No);
                $("#VoucherDate").val(VoucherLists[0].Voucher_Date);
                $("#CheckNumber").val(VoucherLists[0].Cheque_No);
                $("#CheckDate").val(VoucherLists[0].Cheque_Date);
                $("#Remarks").val(VoucherLists[0].Remarks);

                $(VoucherLists).each(function (i,o) {
                    var tBody = $("#tblVoucher > TBODY")[0];
                    //Add Row.
                    var row = tBody.insertRow(-1);
                    //Add Button cell.
                    cell = $(row.insertCell(-1));
                    let btnRemove = `<a class="btn btn-danger" onclick="Remove(this);" href="javascript:void(0)"><i class="fa fa-trash"></i></a>
                                 <input type="hidden" id="hdnLine_Id_${o.Ledger_Id}" name="hdnLine_Id_${o.Ledger_Id}" data-line-id="${o.Ledger_Id}" value="${o.Line_Id}" />
                                 <input type="hidden" id="hdnPartyId_${o.Ledger_Id}" name="hdnPartyId_${o.Ledger_Id}" data-party-id="${o.Ledger_Id}" value="${o.Ledger}" />
                                 <input type="hidden" id="hdnEnteryType_${o.Ledger_Id}" name="hdnEnteryType_${o.Ledger_Id}" value="${o.Entry_Type}" />
                                 <input type="hidden" id="hdnAmount_${o.Ledger_Id}" data-index="${o.Ledger_Id}" name="hdnAmount_${o.Ledger_Id}" value="${o.Amount}" />
                               `;
                    cell.append(btnRemove);

                    //Add Entry Type cell.
                    var cell = $(row.insertCell(-1));
                    cell.html(o.Entry_Type);

                    //Add Party cell.
                    cell = $(row.insertCell(-1));
                    cell.html(o.Ledger);
                    //Add Office cell.
                    cell = $(row.insertCell(-1));
                    cell.html($("#OfficeId :selected").text());
                    //Add Amount cell.
                    cell = $(row.insertCell(-1));
                    cell.html(o.Amount);
                });
                $("td").each(function () {
                    $(this).addClass("tbl-css");
                });

                Calculate();
            });
        }

        $("body").on("click", "#btnReset", function (e) {
            e.preventDefault();
            $("#PartyId").val("");
            $("#Amount").val("");
            $("#btnAdd").val("Add");
        });

        $("#btnAdd").click(function (e) {
            e.preventDefault();
            let bAdded = true;
            let msg = "";

            if ($("#OfficeId :selected").val() === "0" || $("#OfficeId :selected") === "") {
                msg = "Please select office";
                bAdded = false;
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
            else if ($("#Constant_Id :selected").val().toLowerCase().trim() === "" || $("#Constant_Id :selected").val().toLowerCase().trim() === "0") {
                msg = "Please select voucher type";
                bAdded = false;
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
            else if ($("#ddlEnteryType :selected").val().toLowerCase().trim() === "") {
                msg = "Please select entry type.";
                bAdded = false;
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
            else if ($("#PartyId :selected").val() === "0" || $("#PartyId :selected") === "") {
                msg = "Please select party";
                bAdded = false;
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
            else if ($("#Amount").val() === "" || parseInt($("#Amount").val()) === 0) {
                msg = "Please enter amount.";
                bAdded = false;
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
            

            //Reference the Party and Location ddl.
            if (bAdded) {
                if ($("#tblVoucher TBODY TR").length > 0) {
                    $("[id^='hdnPartyId_']").each(function () {
                        let partyId = parseInt($(this).attr('data-party-id'));
                        if (parseInt($("#PartyId").val()) === partyId) {
                            msg = "Entry is already exists!!!";
                            bAdded = false;
                            $('#alertModal').modal('show');
                            $('#msg').html(msg);
                            return false;
                        }
                    });
                }
            }

            if (bAdded) {
                let partyId = parseInt($("#PartyId").val());
                var tBody = $("#tblVoucher > TBODY")[0];
                //Add Row.
                var row = tBody.insertRow(-1);
                //Add Button cell.
                cell = $(row.insertCell(-1));
                let btnRemove = `<a class="btn btn-danger" onclick="Remove(this);" href="javascript:void(0)"><i class="fa fa-trash"></i></a>
                                 <input type="hidden" id="hdnLine_Id_${partyId}" name="hdnLine_Id_${partyId}" value="0" />
                                 <input type="hidden" id="hdnPartyId_${partyId}" name="hdnPartyId_${partyId}" data-party-id="${$("#PartyId :selected").val()}" value="${$("#PartyId :selected").text()}" />
                                 <input type="hidden" id="hdnEnteryType_${partyId}" name="hdnEnteryType_${partyId}" value="${$("#ddlEnteryType :selected").text()}" />
                                 <input type="hidden" id="hdnAmount_${partyId}" data-index="${partyId}" name="hdnAmount_${partyId}" value="${$("#Amount").val()}" />
                               `;
                cell.append(btnRemove);

                //Add Entry Type cell.
                var cell = $(row.insertCell(-1));
                cell.html($("#ddlEnteryType :selected").text());

                //Add Party cell.
                cell = $(row.insertCell(-1));
                cell.html($("#PartyId option:selected").text());
                //Add Office cell.
                cell = $(row.insertCell(-1));
                cell.html($("#OfficeId :selected").text());
                //Add Amount cell.
                cell = $(row.insertCell(-1));
                cell.html($("#Amount").val());

                //Set Default
                $("#ddlEnteryType").val("CR");
                $('#PartyId').val(0);
                $("#Amount").val("");

                $("td").each(function () {
                    $(this).addClass("tbl-css");
                });
            }

            Calculate();

            if (bAdded) {
                return true;
            } else {
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
        });

        $("body").on("click", "#btnSubmit", function () {
            //Loop through the Table rows and build a JSON array.
            
            var cramount = parseFloat(0);
            var dramount = parseFloat(0);
            let VoucherLine = [];
            let isValid = true;
            let msg = "";
            if ($("#OfficeId :selected").val() === "0" || $("#OfficeId :selected") === "") {
                msg = "Please select office";
                bAdded = false;
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
            if ($("#Constant_Id :selected").val().toLowerCase().trim() === "" || $("#Constant_Id :selected").val().toLowerCase().trim() === "0") {
                msg = "Please select voucher type";
                bAdded = false;
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
            //if ($("#VoucherNumber").val() === "") {
            //    msg = "Please enter voucher number";
            //    isValid = false;
            //    $('#alertModal').modal('show');
            //    $('#msg').html(msg);
            //    return false;
            //}
            if ($("#VoucherDate").val() === "") {
                msg = "Please select voucher date";
                isValid = false;
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
            
            if ($("#CheckNumber").val() != "") {
                if ($("#CheckDate").val() === "") {
                    msg = "Please select cheque date";
                    isValid = false;
                    $('#alertModal').modal('show');
                    $('#msg').html(msg);
                    return false;
                }
            }

            if (isValid) {
                if ($("#tblVoucher TBODY TR").length > 0) {
                    if ($("#Constant_Id :selected").text().toLowerCase().trim() === "jv" ||
                        $("#Constant_Id :selected").text().toLowerCase().trim() === "sales" ||
                        $("#Constant_Id :selected").text().toLowerCase().trim() === "purchase") {
                        $("[id^='hdnPartyId_']").each(function () {
                            let index = parseInt($(this).attr('data-party-id'));
                            let party = $(this).val().toLowerCase().trim();
                            let enterytype = $("#hdnEnteryType_" + index).val().toLocaleLowerCase().trim();
                            if (party.includes("cash") || party.includes("bank")) {
                                if (enterytype === "dr" || enterytype === "cr") {
                                    msg = "In this VocherType no Cash or bank ledger allowed";
                                    isValid = false;
                                    $('#alertModal').modal('show');
                                    $('#msg').html(msg);
                                    return false;
                                }
                            }
                        });
                        
                    }
                    
                    if ($("#Constant_Id :selected").text().toLowerCase().trim() === "payment") {
                        $("[id^='hdnPartyId_']").each(function () {
                            let index = parseInt($(this).attr('data-party-id'));
                            let party = $(this).val().toLowerCase().trim();
                            let enterytype = $("#hdnEnteryType_" + index).val().toLocaleLowerCase().trim();
                            if (enterytype === "cr" && !(party.includes("cash") || party.includes("bank"))) {
                                msg = "In case of Payment VocherType atleast one Cash or bank ledger must be entered with CR";
                                isValid = false;
                                $('#alertModal').modal('show');
                                $('#msg').html(msg);
                                return false;
                            }
                        });
                    }

                    if ($("#Constant_Id :selected").text().toLowerCase().trim() === "receipt") {
                        $("[id^='hdnPartyId_']").each(function () {
                            let index = parseInt($(this).attr('data-party-id'));
                            let party = $(this).val().toLowerCase().trim();
                            let enterytype = $("#hdnEnteryType_" + index).val().toLocaleLowerCase().trim();
                            if (enterytype === "dr" && !(party.includes("cash") || party.includes("bank"))) {
                                msg = "In case of Receipt VocherType atleast one Cash or bank ledger must be entered with DR";
                                isValid = false;
                                $('#alertModal').modal('show');
                                $('#msg').html(msg);
                                return false;
                            }
                        });
                    }

                    if ($("#Constant_Id :selected").text().toLowerCase().trim() === "contra") {
                        $("[id^='hdnPartyId_']").each(function () {
                            let index = parseInt($(this).attr('data-party-id'));
                            let party = $(this).val().toLowerCase().trim();
                            let enterytype = $("#hdnEnteryType_" + index).val().toLocaleLowerCase().trim();
                            if ((enterytype === "dr" && !(party.includes("cash") || party.includes("bank"))) || (enterytype === "cr" && !(party.includes("cash") || party.includes("bank"))) ) {
                                isValid = false;
                                msg = "In case of Contra VocherType Cash or bank ledger must be entered in both DR & CR";
                                $('#alertModal').modal('show');
                                $('#msg').html(msg);
                                return false;
                            }
                        });

                    }
                    
                    $("[id^='hdnAmount_']").each(function () {
                        let index = parseInt($(this).attr("data-index"));
                        if ($("#hdnEnteryType_" + index).val().toLocaleLowerCase() === "cr") {
                            cramount += parseFloat($(`#hdnAmount_${index}`).val());
                        }
                    });

                    $("[id^='hdnAmount_']").each(function () {
                        let index = parseInt($(this).attr("data-index"));
                        if ($("#hdnEnteryType_" + index).val().toLocaleLowerCase() === "dr") {
                            dramount += parseFloat($(`#hdnAmount_${index}`).val());
                        }
                    });

                    if (cramount !== dramount) {
                        msg = "Dr and Cr total must be equal";
                        isValid = false;
                        $('#alertModal').modal('show');
                        $('#msg').html(msg);
                        return false;
                    }

                    if (isValid) {
                        $("[id^='hdnPartyId_']").each(function () {
                            let partyId = parseInt($(this).attr('data-party-id'));
                            let oMapping = {};
                            oMapping.Line_Id = $('#hdnLine_Id_' + partyId).val();
                            oMapping.Ledger_Id = partyId;
                            oMapping.Entry_Type = $('#hdnEnteryType_' + partyId).val();
                            oMapping.Amount = $('#hdnAmount_' + partyId).val();
                            VoucherLine.push(oMapping);
                        });
                        $("#VoucherLine").val(JSON.stringify(VoucherLine));
                    }

                    if (isValid) {
                        return true;
                    } else {
                        return false;
                    }
                } else {
                    msg = "Please add at least 1 voucher.";
                    isValid = false;
                    $('#alertModal').modal('show');
                    $('#msg').html(msg);
                    return false;
                }
            } else {
                $('#alertModal').modal('show');
                $('#msg').html(msg);
                return false;
            }
        });

        $("#btnResetForm").click(function (e) {
            e.preventDefault();
            $("#drpParty").val(0);
            $("#VoucherLine").val("");
            $("#Amount_DR").val(0);
            $("#Amount_CR").val(0);
            $("#Total_Amount").val(0);
            $("#Constant_Id").val("");
            $("#VoucherNumber").val("");
            $("#VoucherDate").val("");
            $("#CheckNumber").val("");
            $("#CheckDate").val("");
            $("#PartyId").val("");
            $("#Amount").val("");
            $("#Remarks").val("");
            $("#tblVoucher TBODY").empty();
            $("#divDeleteVoucher").css('display', 'none');
            var cramount = parseFloat(0);
            var dramount = parseFloat(0);
            var diffamount = parseFloat(0);
            if ($("#tblVoucher TBODY TR").length > 0) {
                if ($("[id^='hdnAmount_']").length > 0) {
                    $("[id^='hdnAmount_']").each(function () {
                        let index = parseInt($(this).attr("data-index"));
                        if ($("#hdnEnteryType_" + index).val().toLocaleLowerCase() === "cr") {
                            cramount += parseFloat($(`#hdnAmount_${index}`).val());
                        }
                    });
                    $("[id^='hdnAmount_']").each(function () {
                        let index = parseInt($(this).attr("data-index"));
                        if ($("#hdnEnteryType_" + index).val().toLocaleLowerCase() === "dr") {
                            dramount += parseFloat($(`#hdnAmount_${index}`).val());
                        }
                    });
                    if (cramount > 0 && dramount > 0) {
                        diffamount = cramount - dramount;
                    }
                    $("#divAmountDiffrence").show();
                    $("#lblDebitTotal").text(dramount.toFixed(2));
                    $("#lblCreditTotal").text(cramount.toFixed(2));
                    $("#lblDiffrenceTotal").text(diffamount.toFixed(2));
                    $("#Amount_DR").val(dramount.toFixed(2));
                    $("#Amount_CR").val(cramount.toFixed(2));
                    $("#Total_Amount").val(dramount.toFixed(2));
                }
            } else {
                $("#divAmountDiffrence").hide();
            }
        });

        $("#btnDelete").click(function () {
            let VoucherId = parseInt($("#VoucherId").val());
            if (VoucherId > 0) {
                if (confirm("Do you want to remove this voucher", "Remove")) {
                    window.location.href = "/Material/DeleteMatrialPurchase?VoucherId=" + VoucherId + "&AppToken=" + scope.AppToken;
                }
            }
            Calculate();
        });
    });

    function Remove(button) {
        //Determine the reference of the Row using the Button.
        var row = $(button).closest("TR");
        if (confirm("Do you want to remove this entry type", "Remove")) {
            //Get the reference of the Table.
            var table = $("#tblVoucher")[0];
            //Delete the Table row using it's Index.
            table.deleteRow(row[0].rowIndex);
        }
        Calculate();
    };

    $("#btnBack").click(function () {
        window.location.href = "@Url.Action("ManageVoucher", "master")?AppToken=@Model.AppToken";
    });

    function Calculate() {
        var cramount = parseFloat(0);
        var dramount = parseFloat(0);
        var diffamount = parseFloat(0);
        if ($("#tblVoucher TBODY TR").length > 0) {
            if ($("[id^='hdnAmount_']").length > 0) {
                $("[id^='hdnAmount_']").each(function () {
                    let index = parseInt($(this).attr("data-index"));
                    if ($("#hdnEnteryType_" + index).val().toLocaleLowerCase().trim() === "cr") {
                        cramount += parseFloat($(`#hdnAmount_${index}`).val());
                    }
                });
                $("[id^='hdnAmount_']").each(function () {
                    let index = parseInt($(this).attr("data-index"));
                    if ($("#hdnEnteryType_" + index).val().toLocaleLowerCase().trim() === "dr") {
                        dramount += parseFloat($(`#hdnAmount_${index}`).val());
                    }
                });
                if (cramount > 0 && dramount > 0) {
                    diffamount = Math.abs(cramount - dramount);
                }
                $("#divAmountDiffrence").show();
                $("#lblDebitTotal").text(dramount.toFixed(2));
                $("#lblCreditTotal").text(cramount.toFixed(2));
                $("#lblDiffrenceTotal").text(diffamount.toFixed(2));
                $("#Amount_DR").val(dramount.toFixed(2));
                $("#Amount_CR").val(cramount.toFixed(2));
                $("#Total_Amount").val(dramount.toFixed(2));
            }
        } else {
            $("#divAmountDiffrence").hide();
        }
    };
</script>