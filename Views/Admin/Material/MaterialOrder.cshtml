@model IMS.Models.ViewModel.MaterialOrder
@{
    ViewBag.Title = "Order Approval";
    Layout = "~/Views/Shared/DashBoard/_Layout.cshtml";
}

@{
    var AppToken = Convert.ToString(@Model.AppToken);
}
<div id="page-wrapper" class="gray-bg dashbard-1">
    <div class="content-main">
        <!--banner-->
        <div class="banner">

            <h2>
                <a href="/admin/dashboard">Home</a>
                <i class="fa fa-angle-right"></i>
                <span>Order Approval</span>
            </h2>
        </div>
        <!--//banner-->
        <!--content-->
        <div id="modelForm">
            <div class="blank">
                <div class="blank-page">
                    @Html.Partial("~/Views/Shared/_MessageBox.cshtml")
                    <div class="col-lg-12 col-md-12 col-sm-12 col-xs-12 form-group pull-right">
                        @using (Html.BeginForm("ManageMaterialOrder", "Material", FormMethod.Post, new { enctype = "multipart/form-data", @id = "MaterialOrder" }))
                        {
                            @Html.HiddenFor(m => m.AppToken)
                            @Html.HiddenFor(m => m.POIds, htmlAttributes: new { @id = "POIds" })
                            @Html.HiddenFor(m => m.Status, htmlAttributes: new { @id = "Status" })
                            @Html.HiddenFor(m => m.POId, htmlAttributes: new { @id = "POId" })
                            <div id="listGrid"></div>
                            <div class="col-md-8"></div>
                            <div class="col-md-1"></div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnApprove" id="btnApprove" class="btncustome pull-right">Approve</button>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnReject" id="btnReject" class="btncustome pull-right">Reject</button>
                                </div>
                            </div>
                            <div class="col-md-1">
                                <div class="appointment-btn text-lg-right">
                                    <button type="submit" name="btnHold" id="btnHold" class="btncustome pull-right">Hold</button>
                                </div>
                            </div>

                        }

                    </div>

                    <div class="modal fade transfom" id="myModal" role="dialog">
                        <div class="modal-dialog modal-lg ">

                            <!-- Modal content-->
                            <div class="modal-content">
                                <div class="modal-header">
                                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                                    <h4 class="modal-title">Item Detail</h4>
                                </div>
                                <div class="modal-body">
                                    <div id="itemGrid"></div>
                                </div>
                                <div class="modal-footer">
                                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                                </div>
                            </div>

                        </div>
                    </div>

                </div>
                <div class="clearfix"> </div>


            </div>



        </div>

        <!--//content-->
        <!---->
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {

        function showDetailDialog(value) {
            var objret = $.grep(dtsrc, function (n, i) {
                return n.PO_No = value;
            });

            var fields = [
                { name: "PO_No", type: "text", title: "PO_No", sorting: true, filtering: false},
                { name: "Item", type: "text", title: "Item", sorting: true, filtering: false },
                { name: "Order_Qty", type: "text", title: "Qty", sorting: true, filtering: false },
                { name: "Order_Rate", type: "text", title: "Rate", sorting: true, filtering: false },
                { name: "Amount", type: "text", title: "Amount", sorting: true, filtering: false },
                { name: "Remarks", type: "text", title: "Remarks", sorting: true, filtering: false }
            ];
            var options = {
                filtering: true,
                editing: true,
                sorting: true,
                paging: true,
                autoload: true,
                multiselect: true,
                controller: {
                    ItemLists: objret,
                    loadData: function (filter) {
                        return $.grep(this.ItemLists, function (ItemList) {
                            return ((!filter.Item || ItemList.Item.toLowerCase().indexOf(filter.Item.toLowerCase()) > -1)
                                && (!filter.Order_Qty || ItemList.Order_Qty.toLowerCase().indexOf(filter.Order_Qty.toLowerCase()) > -1)
                                && (!filter.Order_Rate || ItemList.Order_Rate.toLowerCase().indexOf(filter.Order_Rate.toLowerCase()) > -1)
                                && (!filter.Amount || ItemList.Amount.toLowerCase().indexOf(filter.Amount.toLowerCase()) > -1)
                                && (!filter.Remarks || ItemList.Remarks.toLowerCase().indexOf(filter.Remarks.toLowerCase()) > -1));


                        });
                    }
                },
                fields: fields
            };
            $.extend(options, IMSC.grid_options);
            $("#itemGrid").jsGrid(options);


            $("#myModal").modal();
        }


        $("body").on("click", "#btnApprove", function () {
            $("#POIds").val(selectedItems[0]);
            $("#Status").val("A");
        });
        $("body").on("click", "#btnReject", function () {
            $("#POIds").val(selectedItems[0]);
            $("#Status").val("R");
        });
        $("body").on("click", "#btnHold", function () {
            $("#POIds").val(selectedItems[0]);
            $("#Status").val("H");
        });


        if ('@ViewBag.Msg' != "") {
            $('#alertModal').modal('show');
            $('#msg').html("@ViewBag.Msg");
        }
        var dtsrc;
        IMSC.ajaxCall("GET", "/Material/MaterialOrder_GetPendingOrder?AppToken="+'@Model.AppToken', {}, "text", function (d) {
            dtsrc = JSON.parse(d);
            var result = [...new Map(dtsrc.map(item =>[item["PO_Id"], item])).values()];
            if (result !== "null" && result !== "") {
                var fields = [
                    {

                        width: 25,
                        sorting: false,
                        headerTemplate: function () {
                            return $("<input>").attr("type", "checkbox").attr("id", "selectAllCheckbox").attr("name", "Action").on("change", function () { checkedAll($(this)); });
                        },
                        itemTemplate: function (_, item) {
                            return $("<input>").attr("type", "checkbox").attr("class", "singleCheckbox")
                                .prop("checked", $.inArray(item.PO_No, selectedItems) > -1)
                                .on("change", function () {
                                    $(this).is(":checked") ? selectItem($(this).parent().next().text()) : unselectItem($(this).parent().next().text());
                                });
                        },

                    },
                    { name: "PO_Id", css: "hidden", },
                    {
                        name: "PO_No",
                        itemTemplate: function (value) {
                            return $("<a>").text(value).on("click", function () { showDetailDialog(value)});
                        }, title: "OrderNo", sorting: true, filtering: true
                    },
                    { name: "SalesMan", type: "text", title: "SalesMan", sorting: true, filtering: true },
                    { name: "PartyName", type: "text", title: "Party", sorting: true, filtering: true},
                    { name: "ContactNo", type: "text", title: "ContactNo", sorting: true, filtering: true},
                    { name: "Address1", type: "text", title: "Address", sorting: true, filtering: true},
                    { name: "Status", type: "text", title: "Status", sorting: true, filtering: true},
                    { name: "LedgerBalance", type: "text", title: "LedgerBal.", sorting: true, filtering: false},
                    { name: "CashBalance", type: "text", title: "CashBal.", sorting: true, filtering: false},
                    { name: "OverdueAmount", type: "text", title: "OverdueAmt.", sorting: true, filtering: false}

                ];
                var options = {
                    filtering: true,
                    editing: true,
                    sorting: true,
                    paging: true,
                    autoload: true,
                    multiselect: true,
                    controller: {
                        OrderLists: result,
                        loadData: function (filter) {
                            return $.grep(this.OrderLists, function (OrderList) {
                                return ((!filter.PO_No || OrderList.PO_No.toLowerCase().indexOf(filter.PO_No.toLowerCase()) > -1)
                                    && (!filter.SalesMan || OrderList.SalesMan.toLowerCase().indexOf(filter.SalesMan.toLowerCase()) > -1)
                                    && (!filter.PartyName || OrderList.PartyName.toLowerCase().indexOf(filter.PartyName.toLowerCase()) > -1)
                                    && (!filter.ContactNo || OrderList.ContactNo.toLowerCase().indexOf(filter.ContactNo.toLowerCase()) > -1)
                                    && (!filter.Address1 || OrderList.Address1.toLowerCase().indexOf(filter.Address1.toLowerCase()) > -1)
                                    && (!filter.Status || OrderList.Status.toLowerCase().indexOf(filter.Status.toLowerCase()) > -1));

                            });
                        }
                    },
                    fields: fields
                };
                $.extend(options, IMSC.grid_options);
                $("#listGrid").jsGrid(options);
                IMSC.filteOnKeyPress("#listGrid");
            }

        });

        var selectedItems = [];

        var selectItem = function (item) {
            selectedItems.push(item);
            if ($(".singleCheckbox").length == $(".singleCheckbox:checked").length) {
                $("#selectAllCheckbox").prop("checked", true);
            } else {
                $("#selectAllCheckbox").prop("checked", false);
            }
        };


        var unselectItem = function (item) {
            selectedItems = $.grep(selectedItems, function (i) {
                return i !== item;
            });
            if (selectedItems.length == 0) {
                $('#selectAllCheckbox').attr('checked', false);
            }
            if ($(".singleCheckbox").length == $(".singleCheckbox:checked").length) {
                $("#selectAllCheckbox").prop("checked", true);
            } else {
                $("#selectAllCheckbox").prop("checked", false);
            }
        };

        var checkedAll = function (item) {
            selectedItems = [];
            if (item[0].checked) { // check select status
                $('.singleCheckbox').each(function () {
                    this.checked = true;
                    selectItem($(this).parent().next().text());
                });
            } else {

                $('.singleCheckbox').each(function () {
                    this.checked = false;
                    unselectItem(item);
                });
                selectedItems = [];
            }
        }




    });

</script>
